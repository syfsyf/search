// Generated by CoffeeScript 1.3.3
(function() {
  var App, Model,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Model = (function() {

    function Model() {
      this.deleteDir = __bind(this.deleteDir, this);

      this.addNewDir = __bind(this.addNewDir, this);

      this.saveIndex = __bind(this.saveIndex, this);

      this.selectIndex = __bind(this.selectIndex, this);
      this.list = ko.observableArray();
      this.selectedIndex = ko.observable();
      this.newDir = this.createNewDir();
    }

    Model.prototype.createNewDir = function() {
      return ko.mapping.fromJS({
        path: ''
      });
    };

    Model.prototype.selectIndex = function(itm) {
      this.selectedIndex(Utils.clone(itm));
      return _l(ko.mapping.toJSON(this.selectedIndex, 'selectedIndex'));
    };

    Model.prototype.saveIndex = function(itm) {
      var idx;
      _l('saveIndex');
      _l(ko.mapping.toJS(this.selectedIndex), 'selectedIndex');
      idx = ko.mapping.toJS(this.selectedIndex);
      delete idx.dirs;
      return $.jsonRPC.request('updateIndex', {
        params: [idx]
      });
    };

    Model.prototype.addNewDir = function() {
      _l('newDir');
      this.selectedIndex().dirs.push(ko.mapping.fromJS({
        path: this.newDir.path()
      }));
      return this.newDir.path('');
    };

    Model.prototype.deleteDir = function(dir) {
      return this.selectedIndex().dirs.remove(dir);
    };

    return Model;

  })();

  App = (function() {

    function App() {
      this.test = __bind(this.test, this);

      this.handleError = __bind(this.handleError, this);

      this.onIndexList = __bind(this.onIndexList, this);
      $('#test').click(this.test);
      this.model = ko.mapping.fromJS(new Model);
      ko.applyBindings(this.model);
      $.jsonRPC.request('indexList', {
        params: null,
        success: this.onIndexList
      });
    }

    App.prototype.onIndexList = function(resp) {
      _l(resp, 'resp');
      ko.mapping.fromJS({
        list: resp.result
      }, this.model);
      return _l(this.model, 'model');
    };

    App.prototype.handleError = function(resp) {
      return alert(resp.error.errorMsg);
    };

    App.prototype.test = function() {
      /*
      		params=null
      		$.jsonRPC.request('indexList',{
      			params: params
      			success:(res)->
      				_l res,'res'
      			error:(res)->
      				_l res,'res'
      		});
      */

      /*
      		params=[{id:1,name:'xxxxx'}]
      		$.jsonRPC.request('updateIndex',{
      			params: params
      			success:(res)->
      				_l res,'res'
      			error:(res)->
      				_l res,'res'
      		});
      */

    };

    return App;

  })();

  $(document).ready(function() {
    return new App;
  });

}).call(this);
